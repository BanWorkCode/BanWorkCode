Включение отключение wi-fi
//-------------------


верификация
//-------------------
Выдавать сообщение
нельзя загружать прошивку если не инициализирован мк


протестировать другие мк
//-------------------

при инициализации программируемого МК, включать режим ожидания

//-------------------
Extended Erase
//-------------------

Старт стоп таймера курсора, только в меню клавиатуры
используется для движения строки


//----------------------

ssid полностью переработать!
должен выдовать либо название сети, либо ошибку


//--------------
g_fileToTransfer.uploadedData не обнуляется , сделал чтоб обнулялось после вычисления размера

//--------------
все константы вынести в дефайны

//
новые wifi сети не записываются в g_unionWifi.settingsWIFI[i]  из-за того что из Флаш памяти считывается FF


//-------------------
перенести вызов функции STORING_CheckFirstConnection();	

//-------------------

удаление папки(если она не пустая, выводить об этом сообщение и отказ)

//-----------------
SD_CreateNewFolder - наложить ограничения на имя папки(точки запятые и тд)


//-----------------
поле в ftp path  обязательно для заполнения либо должно заполнятся по умолчанию : "/"


//------

MAX_NESTED_DIR_DEPTH   маленькая глубина!!!

//----------------
ввывести сообщение после удаления

обнулить функцию нажатия вправо
переход по обнуленной функции???

получение списка файлов фтп два раза не работает!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ESP перезагрузилась
STM зависла
	
//----------------------
Дата модификации файла или директории выводится по гринвичу, а надо по местному времени (+3 часа)
DISPLAY_ShowGeneralInformationForLists
//-----------------
обновление прошивки программатора
проверить что это файл прошивки этого устройства
//-----------------
Перенести вызов функции DISPLAY_ShowGeneralInformationForLists в freertos
//-----------------
Определять перезагрузку ESP, в ответ переопределять wifi.
Возможноли корректно завершать работу ESP?

ESP после загрузки переподключаться к wifi!
//--------------
Предупреждения при компиляции
numberOfBytes:
Функция проверяет какие секторы надо отчистить, при этом сколько байт(numberOfBytes) в строке я не учитывал
В идеале надо к адресу строки добавлять количество байт и еще раз проверять в каком секторе этот адрес

status:
Функция зупуска программы в программируемом устройсте
надо использовать если произошла ошибка запуска, сообщение наверно выдавать
//--------------


static PROGRAMMER_Device_t stm32[NUMBER_OF_DEVICES] =
{
  {0x440, 0x21, "STM32F05xxx and STM32F030x8"},
  {0x444, 0x10, "STM32F03xx4/6"},
  {0x442, 0x52, "STM32F030xC"},
  {0x445, 0xA1, "STM32F04xxx"},
  {0x445, 0xA2, "STM32F070x6"},
  {0x448, 0xA2, "STM32F070xB"},
  {0x448, 0xA1, "STM32F071xx/072xx"},
  {0x442, 0x50, "STM32F09xxx"},
  {0x412, 0x00, "STM32F10xxx, Low-density"},
  {0x410, 0x00, "STM32F10xxx, Medium-density"},
  {0x414, 0x00, "STM32F10xxx, High-density"},
  {0x420, 0x10, "STM32F10xxx, Medium-density value line"},
  {0x428, 0x10, "STM32F10xxx, High-density value line"},
  {0x418, 0x00, "STM32F105xx/107xx"},
  {0x430, 0x21, "STM32F10xxx XL-density"},
  {0x411, 0x20, "STM32F2xxxx"},//BID=1FFF77DE //30686
  {0x411, 0x33, "STM32F2xxxx"},
  {0x432, 0x41, "STM32F373xx"},
  {0x432, 0x50, "STM32F378xx"},
  {0x422, 0x41, "STM32F302xB(C)/303xB(C)"},
  {0x422, 0x50, "STM32F358xx"},
  {0x439, 0x40, "STM32F301xx/302x4(6/8)"},
  {0x439, 0x50, "STM32F318xx"},
  {0x438, 0x50, "STM32F303x4(6/8)/334xx/328xx"},
  {0x446, 0x40, "STM32F302xD(E)/303xD(E)"},
  {0x446, 0x50, "STM32F398xx"},
  {0x413, 0x31, "STM32F40xxx/41xxx"},//
  {0x413, 0x90, "STM32F40xxx/41xxx",3,id413},//-
  {0x419, 0x70, "STM32F42xxx/43xxx"},//
  {0x419, 0x91, "STM32F42xxx/43xxx"},//-
  {0x423, 0xD1, "STM32F401xB(C)"},//
  {0x433, 0xD1, "STM32F401xD(E)"},//BID=1FFF76DE //30430
  {0x458, 0xB1, "STM32F410xx"},//
  {0x431, 0xD0, "STM32F411xx"},//
  {0x441, 0x90, "STM32F412xx"},//
  {0x421, 0x90, "STM32F446xx"},//
  {0x434, 0x90, "STM32F469xx/479xx"},//
  {0x463, 0x90, "STM32F413xx/423xx"},
  {0x452, 0x90, "STM32F72xxx/73xxx"},
  {0x449, 0x70, "STM32F74xxx/75xxx"},
  {0x449, 0x90, "STM32F74xxx/75xxx"},
  {0x451, 0x93, "STM32F76xxx/77xxx"},
  {0x466, 0x52, "STM32G03xxx/04xxx"},
  {0x460, 0xB2, "STM32G07xxx/08xxx"},
  {0x468, 0xD4, "STM32G431xx/441xx"},
  {0x469, 0xD5, "STM32G47xxx/48xxx"},
  {0x483, 0x91, "STM32H72xxx/73xxx"},
  {0x450, 0x90, "STM32H74xxx/75xxx"},
  {0x480, 0x90, "STM32H7A3xx/B3xx"},
  {0x457, 0xC3, "STM32L01xxx/02xxx"},
  {0x425, 0xC0, "STM32L031xx/041xx"},
  {0x417, 0xC0, "STM32L05xxx/06xxx"},
  {0x447, 0x41, "STM32L07xxx/08xxx"},
  {0x447, 0xB2, "STM32L07xxx/08xxx"},
  {0x416, 0x20, "STM32L1xxx6(8/B)"},
  {0x429, 0x20, "STM32L1xxx6(8/B)A"},
  {0x427, 0x40, "STM32L1xxxC"},
  {0x436, 0x45, "STM32L1xxxD"},
  {0x437, 0x40, "STM32L1xxxE"},
  {0x464, 0xD1, "STM32L412xx/422xx"},
  {0x435, 0x91, "STM32L43xxx/44xxx"},
  {0x462, 0x92, "STM32L45xxx/46xxx"},
  {0x415, 0xA3, "STM32L47xxx/48xxx"},
  {0x415, 0x92, "STM32L47xxx/48xxx"},
  {0x461, 0x93, "STM32L496xx/4A6xx"},
  {0x470, 0x95, "STM32L4Rxx/4Sxx"},
  {0x471, 0x90, "STM32L4P5xx/Q5xx"},
  {0x472, 0x92, "STM32L552xx/562xx"},
  {0x495, 0xD5, "STM32WB30xx/35xx/50xx/WB55xx"},
  {0x497, 0xC3, "STM32WLE5xx/WL55xx"}
};